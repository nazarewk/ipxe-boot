#!ipxe
set http http://${next-server}
set nfs nfs:${next-server}:

set sshkey ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAYEAvM4y0G5vZ2OYlSeGn2w7y/s+VZMzhGGb9rlUkDtWtwvsE2TWlApFyHggn6qObmQ5DUOu0Mhy6l/ojylyp2Q/C7FMoQWkeBorLKvxf8KFE1lJktCXCxJyptDn8kkNi6Fxszig/flrp5lSWWjDCafyVeyFhvMo22fblzjPOG//wu0+RnOLn9eiWC2CUvJjG11AH+AxWI4UMXY93gq5K1YVLd3EmhI/L1ITAoY3cXoheP0TW9epqe0Zq6lGO+gLiYeWgZJiolSqcHCkTzopbkIZ2cP+yEdeJrYp8ibdO7H0oyXOy48yPElkEobcISzQmTayXQfXyr9YzFPGdM0ZxxKPfpmMox2DTL+mpo1etLOf7ihJNBoR6aAcAWeYLdfqmIlWnVVySW1RPcq31tR4uCP6jpDsbEArXP7lttkWzb0EuBRKN94OVsl7gHuqSSdnrWJwU6jn8EAi9krRQtOKUrz62nOmAkWIe/4fM/3CVjuOgTSUkmuu15SgrbN9aLYp0ct/ 2c:c0:54:ed:f6:0d:00:05:50:be:73:ea:f5:23:20:a7 nazarewk

#set menu-timeout 5000
#set submenu-timeout ${menu-timeout}
isset ${menu-default} || set menu-default exit

###################### MAIN MENU ####################################

:start
menu iPXE boot menu
item --gap --             ------------------------- Operating systems ------------------------------
item --key s alpine-standard        Alpine Linux - Standard
item --key e alpine-extended        Alpine Linux - Extended
item --key a archiso                Arch Linux (archiso)
item --key c coreos                 CoreOS
item --key e coreos-etcd            CoreOS with etcd
item --key r rancher                RancherOS
item --key i clear-pxe              ClearLinux
item --key i ubuntu                 Ubuntu Cloud
item --gap --             ------------------------- Advanced options -------------------------------
item config       Configure settings
item shell                Drop to iPXE shell
item reboot               Reboot computer
item
item --key x exit         Exit iPXE and continue BIOS boot
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0

set base-nfs ${nfs}/media/${selected}
set base-url ${http}/media/${selected}
set static-url ${http}/static
set media-url ${http}/media
goto ${selected}

:cancel
echo You cancelled the menu, dropping you to a shell

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
goto start

:failed
echo Booting failed, dropping to shell
goto shell

:reboot
reboot

:exit
exit

:config
config
goto start

:back
set submenu-timeout 0
clear submenu-default
goto start

############ MAIN MENU ITEMS ############

:alpine-standard
:alpine-extended
echo Booting Alpine Linux from ${base-url}

set opts
set opts ${opts} ip=dhcp nomodeset
set opts ${opts} modloop=${base-url}/boot/modloop-hardened
#set opts ${opts} debug
set opts ${opts} quiet
set opts ${opts} alpine_dev=${base-nfs}/root

echo Arguments: ${opts}
kernel ${base-url}/boot/vmlinuz-hardened ${opts}
initrd ${base-url}/boot/initramfs-hardened
sleep 5
boot || goto failed
goto start


:archlinux
echo Booting Arch Linux from ${base-url}
kernel ${base-url}/arch/boot/x86_64/vmlinuz archisobasedir=arch archiso_http_srv=${base-url}/ ip=::
initrd ${base-url}/arch/boot/x86_64/archiso.img

boot || goto failed
goto start


:coreos
:coreos-etcd
set base-url ${http}/media/coreos
set ignition ${base-url}/${selected}.ign
echo Booting CoresOS ${base-url} from ${ignition}
set opts sshkey="${sshkey}"
set opts ${opts} coreos.autologin
set opts ${opts} coreos.first_boot=1 coreos.config.url=${ignition}
kernel ${base-url}/coreos_production_pxe.vmlinuz ${opts}
initrd ${base-url}/coreos_production_pxe_image.cpio.gz

boot || goto failed
goto start

:rancher
echo Booting RancherOS ${base-url}

set mcc-url ${base-url}/cc
set scc-url ${static-url}/rancher-cloud-config
set opts
set opts ${opts} rancher.autologin=tty1
#set opts ${opts} rancher.state.dev=LABEL=RANCHER_STATE rancher.state.autoformat=[/dev/sda]
set opts ${opts} --
set opts ${opts} rancher.cloud_init.datasources=[url:${scc-url}/base.yml,url:${mcc-url}/ssh.yml,url:${scc-url}/${selected}.yml]
kernel ${base-url}/vmlinuz ${opts}
initrd ${base-url}/initrd

boot || goto failed
goto start


:clear-pxe
echo Booting ClearLinux

set opts
set opts ${opts} quiet
set opts ${opts} init=/usr/lib/systemd/systemd-bootchart
set opts ${opts} initcall_debug
set opts ${opts} tsc=reliable no_timer_check
set opts ${opts} noreplace-smp
set opts ${opts} rw
set opts ${opts} initrd=initrd

kernel ${base-url}/linux ${opts}
initrd ${base-url}/initrd

boot || goto failed
goto start

:ubuntu
echo Booting Ubuntu Cloud

set opts
set opts ${opts}

echo Ubuntu Cloud boot not ready
goto start

kernel ${base-url}/vmlinuz ${opts}
initrd ${base-url}/initrd

boot || goto failed
goto start

